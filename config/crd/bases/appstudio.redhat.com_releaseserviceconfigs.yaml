---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: releaseserviceconfigs.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: ReleaseServiceConfig
    listKind: ReleaseServiceConfigList
    plural: releaseserviceconfigs
    shortNames:
    - rsc
    singular: releaseserviceconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReleaseServiceConfig is the Schema for the releaseserviceconfigs
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ReleaseServiceConfigSpec defines the desired state of ReleaseServiceConfig.
            properties:
              advisoryRepo:
                description: AdvisoryRepo is the repo to create advisories in during
                  the managed release PipelineRun
                type: string
              debug:
                description: |-
                  Debug is the boolean that specifies whether or not the Release Service should run
                  in debug mode
                type: boolean
              defaultTimeouts:
                description: |-
                  DefaultTimeouts contain the default Tekton timeouts to be used in case they are
                  not specified in the ReleasePlanAdmission resource.
                properties:
                  finally:
                    description: Finally sets the maximum allowed duration of this
                      pipeline's finally
                    type: string
                  pipeline:
                    description: Pipeline sets the maximum allowed duration for execution
                      of the entire pipeline. The sum of individual timeouts for tasks
                      and finally must not exceed this value.
                    type: string
                  tasks:
                    description: Tasks sets the maximum allowed duration of this pipeline's
                      tasks
                    type: string
                type: object
              notificationSettings:
                description: |-
                  NotificationSettings configure how release notifications are sent
                  to different stakeholders during the release process
                properties:
                  email:
                    description: Email notification configuration
                    properties:
                      enabled:
                        description: Enabled determines if email notifications are active
                        type: boolean
                      recipients:
                        description: Recipients is a list of email addresses to notify
                        items:
                          type: string
                        type: array
                      onFailure:
                        description: OnFailure sends notifications when releases fail
                        type: boolean
                      onSuccess:
                        description: OnSuccess sends notifications when releases succeed
                        type: boolean
                    type: object
                  slack:
                    description: Slack notification configuration
                    properties:
                      enabled:
                        description: Enabled determines if Slack notifications are active
                        type: boolean
                      webhookURL:
                        description: WebhookURL is the Slack webhook URL for notifications
                        type: string
                      channel:
                        description: Channel specifies the Slack channel to notify
                        type: string
                    type: object
                type: object
              securityPolicies:
                description: |-
                  SecurityPolicies define security requirements and constraints
                  that must be enforced during the release process
                properties:
                  requireCodeSigning:
                    description: RequireCodeSigning enforces that all artifacts must be digitally signed
                    type: boolean
                  allowedRegistries:
                    description: AllowedRegistries is a list of container registries that releases can target
                    items:
                      type: string
                    type: array
                  vulnerabilityScanning:
                    description: VulnerabilityScanning configuration for security checks
                    properties:
                      enabled:
                        description: Enabled determines if vulnerability scanning is required
                        type: boolean
                      maxCriticalVulnerabilities:
                        description: MaxCriticalVulnerabilities sets the maximum allowed critical CVEs
                        type: integer
                      maxHighVulnerabilities:
                        description: MaxHighVulnerabilities sets the maximum allowed high-severity CVEs
                        type: integer
                    type: object
                type: object
              resourceLimits:
                description: |-
                  ResourceLimits define constraints on resource usage during release operations
                  to prevent excessive consumption of cluster resources
                properties:
                  maxConcurrentReleases:
                    description: MaxConcurrentReleases limits how many releases can run simultaneously
                    type: integer
                  pipelineResourceLimits:
                    description: PipelineResourceLimits set CPU and memory constraints for release pipelines
                    properties:
                      cpu:
                        description: CPU limit for release pipeline execution
                        type: string
                      memory:
                        description: Memory limit for release pipeline execution
                        type: string
                    type: object
                  timeoutGracePeriod:
                    description: TimeoutGracePeriod defines how long to wait before forcefully terminating stuck releases
                    type: string
                type: object
            type: object
          status:
            description: ReleaseServiceConfigStatus defines the observed state of
              ReleaseServiceConfig.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}